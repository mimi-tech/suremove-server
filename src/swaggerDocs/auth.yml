paths:
  /create-account:
    post:
      tags: # Tag property
        - AUTH # Value of the tag
      summary:  EASYMOVE ACCOUNT REGISTRATION ENDPOINT.
      produces:
        - application/json
      parameters:
        - in: body # request body
          name: create-user-account # name of request, can be any name
          description: It enables all users to create account
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/usersAccount"
      responses: # server responses
        201:
          description: should return account registration successful

  /login:
    post:
      tags: # Tag property
        - AUTH # Value of the tag
      summary: GENERAL LOGIN ENDPOINT FOR USERS.
      produces:
        - application/json
      parameters:
        - in: body # request body
          name: general login endpoint # name of request, can be any name
          description: It enables all church account types to login
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/generalLogin"
      responses: # server responses
        201:
          description: should return login successful        


  /validate-user-token: # path of the grp from your endpoint
    post:
      tags: # Tag property
        - AUTH # Value of the tag
      summary: ENDPOINT FOR VALIDATIONG TOKEN
      produces:
        - application/json
      parameters: # request parameters
        - in: body # request body
          name: for validating user token # name of request, can be any name
          description: It enables user to validate auth token
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/validateUserToken"
      responses: # server responses
        201:
          description: should return user details

  /forgotPassword:
    post:
      tags: # Tag property
        - AUTH # Value of the tag
      summary: FOR SENDING FORGOT PASSWORD CODE TO USER EMAIL ADDRESS.
      produces:
        - application/json
      parameters:
        - in: body # request body
          name: forgotPassword # name of request, can be any name
          description: It enables sending of code to user email to confirm that the user is the owner of the account
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/forgotPassword"
      responses: # server responses
        200:
          description: should return forgot password code sent successful if email is valid

  /validate-forgot-password-code:
    post:
      tags: # Tag property
        - AUTH # Value of the tag
      summary: FOR VERIFYING FORGOT PASSWORD CODE
      produces:
        - application/json
      parameters:
        - in: body # request body
          name: validate-forgot-password-code # name of request, can be any name
          description: It enables verifing the forgotPassword code sent to the user
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/validateForgotPasswordCode"
      responses: # server responses
        200:
          description: should return forgot password code is valid   


  /update-password:
    put:
      tags: # Tag property
        - AUTH # Value of the tag
      summary: FOR UPDATING PASSWORD
      produces:
        - application/json
      parameters:
        - in: body # request body
          name: update-password # name of request, can be any name
          description: It enables users to update their password
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/updatePassword"
      responses: # server responses
        200:
          description: should return password updated successfully                
  

  /update-account-data:
    put:
      tags: # Tag property
        - AUTH # Value of the tag
      summary: ACCOUNT DATA UPDATE.
      produces:
        - application/json
      parameters:
        - in: header
          name: authorization
          description: access token
          required: true
          default: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MzIwODQxODB9.60qxpvDKlXV3x4-XDf2GRWgEkuSvL_XuCYPbn5jil-0

        - in: body # request body
          name: user-account-update # name of request, can be any name
          description: It enables app accounts to be updated
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/updateAccountData"
      responses: # server responses
        201:
          description: should return update successful

  /delete-caccount:
    delete:
      tags:
        - AUTH # Value of the tag
      summary: DELETE USER ACCOUNT
      produces:
        - application/json
      parameters:
        - in: header
          name: authorization
          description: access token
          required: true
          default: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MzIwODQxODB9.60qxpvDKlXV3x4-XDf2GRWgEkuSvL_XuCYPbn5jil-
        - in: body # request body
          name: delete-account # name of request, can be any name
          description: It enables users account to be deleted
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/deleteUser"
      responses:
        200:
          description: should return account deleted successfully



  /account-status:
    put:
      tags: # Tag property
        - AUTH # Value of the tag
      summary: ACCOUNT STATUS.
      produces:
        - application/json
      parameters:
        - in: header
          name: authorization
          description: access token
          required: true
          default: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MzIwODQxODB9.60qxpvDKlXV3x4-XDf2GRWgEkuSvL_XuCYPbn5jil-0

        - in: body # request body
          name: user-account-status # name of request, can be any name
          description: It enables account status to be updated
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/updateAccountStatus"
      responses: # server responses
        201:
          description: should return update successful         



definitions: # Schema definition for request body

  usersAccount:
    type: object
    properties:
      email:
        type: string
        default: miriam@gmail.com

      password:
        type: string
        default: password

      phoneNumber:
        type: string
        default: +2348037335555

      firstName:
        type: string
        default: Miriam

      lastName:
        type: string
        default: Mimi 

      referralId:
        type: string
        default: Mimi 

      username:
        type: string
        default: Mimi 

      gender:
        type: string
        default: Male

      profileImageUrl:
        type: string
        default: rjrj.jpg          

  generalLogin:
    type: object
    properties:
      email:
        type: string
        default: miriam@gmail.com

      password:
        type: string
        default: password  

      phoneNumber:
        type: string
        default: +2348037335555        


  validateUserToken:
    type: object
    properties:
      token:
        type: string
        default: pass in user token

  forgotPassword:
    type: object
    properties:
      emailAddress:
        type: string
        default: mimi@gmail.com

  validateForgotPasswordCode:
    type: object
    properties:
      email:
        type: string
        default: mimi@gmail.com

      emailCode:
        type: number
        default: 123456

  updatePassword:
    type: object
    properties:
      email:
        type: string
        default: mimi@gmail.com

      password:
        type: string
        default: password  


  updateAccountData:
    type: object
    properties:
      updateEmail:
        type: string
        default: lilstex@gmail.com

      updateUsername:
        type: string
        default: chakkah   

      firstName:
        type: string
        default: Miriam

      lastName:
        type: string
        default: Mimi

      profileImageUrl:
        type: string
        default: Mimi 

      accountType:
        type: string
        default: contributor       


  deleteUser:
    type: object
    properties:
      authId:
        type: string
        default: 61dcba2f975d5458b6164f01     

  updateAccountStatus:
    type: object
    properties:
      authId:
        type: string
        default: 61dcba2f975d5458b6164f01                       
     